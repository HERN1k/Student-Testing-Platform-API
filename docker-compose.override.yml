version: '3.7'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    user: root
    volumes:
    - C:\Users\h1rny\OneDrive\Desktop\STPAPIDocker\Nginx:/etc/nginx/conf.d
    ports:
    - "80:80"
    - "443:443"
    restart: always
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
    - stp-network
  
  stp:
    image: ${DOCKER_REGISTRY-}stp
    build:
      context: .
      dockerfile: TestingPlatformAPI/Dockerfile
    container_name: stp
    stop_grace_period: 1m
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=7558
      - POSTGRESQL=Host=postgres;Port=5432;Database=TestingPlatform;Username=postgres;Password=2356
      - REDIS_CONFIGURATION=redis:6379
      - REDIS_INSTANCE_NAME=TestingPlatform
      - HTTPS_APPLICATION_URL=https://dreamworkout.pp.ua
    ports:
      - "7558:7558"
    user: root
    volumes:
      - C:\Users\h1rny\OneDrive\Desktop\STPAPIDocker\DataprotectionKeys:/app/.aspnet/DataProtection-Keys
      - C:\Users\h1rny\OneDrive\Desktop\STPAPIDocker\Logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - stp-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  postgres:
    image: postgres:17
    user: root
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2356
      POSTGRES_DB: TestingPlatform
    ports:
      - "5432:5432"
    volumes:
      - C:\Users\h1rny\OneDrive\Desktop\STPAPIDocker\Postgres:/var/lib/postgresql/data
    networks:
      - stp-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  redis:
    image: redis:latest
    user: root
    ports:
      - "6379:6379"
    volumes:
      - C:\Users\h1rny\OneDrive\Desktop\STPAPIDocker\Redis:/data
      - C:\Users\h1rny\OneDrive\Desktop\STPAPIDocker\Redis\redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - stp-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 10s
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

networks:
  stp-network:
    driver: bridge